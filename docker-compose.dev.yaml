version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: que_agents_postgres_dev
    environment:
      POSTGRES_DB: que_agents_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - que_agents_dev_network

  # Que Agents Application (Development)
  que_agents_dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: que_agents_app_dev
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/que_agents_dev
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      PYTHONPATH: /app/src
      LOG_LEVEL: debug
      ENVIRONMENT: development
    volumes:
      - .:/app
      - /app/src/que_agents/__pycache__
    ports:
      - "8001:8000"
    depends_on:
      - postgres
    command: ["python", "startup.py", "--env", "development", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - que_agents_dev_network

  # Redis (Development)
  redis_dev:
    image: redis:7-alpine
    container_name: que_agents_redis_dev
    ports:
      - "6380:6379"
    networks:
      - que_agents_dev_network

volumes:
  postgres_dev_data:
    driver: local

networks:
  que_agents_dev_network:
    driver: bridge